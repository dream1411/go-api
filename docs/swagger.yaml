basePath: /
definitions:
  models.User:
    properties:
      branch_id:
        type: integer
      create_date:
        type: string
      edit_by:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      nickname:
        type: string
      permission:
        type: string
      phone_number:
        type: string
      profile_image_path:
        type: string
      role_id:
        type: integer
      start_date:
        type: string
      status_id:
        type: integer
      u_code:
        description: คำนวณเป็น Virtual column ใน DB
        type: string
      u_index:
        type: integer
      update_date:
        type: string
      user_type_id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is a sample server for managing users.
  title: Learn API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid username or password
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: User login
      tags:
      - users
  /api/users:
    get:
      description: Get a list of all users
      parameters:
      - description: User ID
        in: query
        name: id
        type: integer
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all users
      tags:
      - users
swagger: "2.0"
